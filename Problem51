import time

def main():
	
	for i in range(1, 10):
		logRange = genPrimeList(i-1, i)
		print(i)
		for number in logRange:
			if convert(number):
				print("Answer is: ", number)
				return
		
		
	
def convert(x):
	num = str(x)
	num = list(num)
	
	zeroCount = num.count("0")
	
	if zeroCount == 1:
		trial = []
		for i in range(10):
			new = ""
			for n in num:
				if n == "0":
					new += str(i)
				else:
					new += n
			trial.append(int(new))
		print(trial)
		if prime8Check(trial):
			print(trial)
			return True
	
	elif zeroCount == 2:
		for opt in [[1, 1], [1, 0], [0, 1]]:
			trial = []
			for i in range(10):
				new = ""
				bin = 0
				for n in num:
					if n == "0" and opt[bin] == 1:
						new += str(i)
						bin += 1
					elif n == "0" and opt[bin] == 0:
						new += n
						bin += 1
					else:
						new += n
				trial.append(int(new))
			print(trial)
		if prime8Check(trial):
			print(trial)
			return True
		
	elif zeroCount == 3:				# just assumed we wouldn't need to check more than 3 zeroes
		for opt in [[1, 1, 1], [1, 1, 0], [1, 0, 1], [1, 0, 0], [0, 1, 1], [0, 1, 0], [0, 0, 1]]:
			trial = []
			for i in range(10):
				new = ""
				bin = 0
				for n in num:
					if n == "0" and opt[bin] == 1:
						new += str(i)
						bin += 1
					elif n == "0" and opt[bin] == 0:
						new += n
						bin += 1
					else:
						new += n
				trial.append(int(new))
			print(trial)
		if prime8Check(trial):
			print(trial)
			return True
		
	return False
	
	
def prime8Check(trial):
	count = 0
	invCount = 0
	for t in trial:
		if isPrime(t):
			count += 1
		else:
			invCount += 1
			if invCount > 3:
				return False
	
	return (count >=8)
	
	
def genPrimeList(a, b):
	lis = []
	for i in range(10**a+1, 10**b, 2):
		if zeroCheck(i):
			if isPrime(i):
				lis.append(i)
	return lis
	
	
def zeroCheck(x):			# making an assumption that the number will contain a zero in it, if that fails then I will choose 1
							# from here, I will replace the zero/zeroes with the other digits and check for other primes
	num = str(x)
	return "0" in num
	
def isPrime(x):
	count = 0
	for i in range(3, round(x**0.5)+1, 2):
		if x % i == 0:
			count += 1
			return False
			break
	if count == 0:
		return True
	
	
if __name__ == '__main__':
	start = time.time()
	main()
	end = time.time()
	print(end-start)
